@using System.Globalization
@using Abotti.BlazorComponents.ViewModels
@using Abotti.Core.QueryResults
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Localization
@inject NavigationManager NavigationManager

@inject IStringLocalizer<ChatSessionsList> Loc

<div class="sidebar">
    <div class="nav-scrollable">
        <div class="nav-item mb-2">
            <button class="btn btn-primary" @onclick="NavigateToNewChat">@Loc["NewChat"]</button>
        </div>

    </div>
</div>

@{
    //Ref date is not necessarily today, but calling it today anyway
    var todaysTopics = ChatSessionsListVm.GetTopicsOnDate(ReferenceDate).OrderByDescending(v => v.Created).ToArray();
    var thisWeeksTopics = ChatSessionsListVm.GetTopicsOnWeek(ReferenceDate, new[] { ReferenceDate }).OrderByDescending(v => v.Created).ToArray();
    var thisMonthsTopics = ChatSessionsListVm.GetTopicsOnMonth(ReferenceDate, true).OrderByDescending(v => v.Created).ToArray();
}

@if (todaysTopics.Length > 0)
{
    <ChatSessionsGroup GroupName=@Loc["Today"] SelectedSessionId="@ChatSessionsListVm.SelectedTopicId" SessionTopics="@todaysTopics" IsCollapsed="false"/>
}


@if (thisWeeksTopics.Length > 0)
{
    <ChatSessionsGroup GroupName=@Loc["EarlierThisWeek"] SelectedSessionId="@ChatSessionsListVm.SelectedTopicId" SessionTopics="@thisWeeksTopics"/>
}

@if (thisMonthsTopics.Length > 0)
{
    <ChatSessionsGroup GroupName=@Loc["EarlierThisMonth"] SelectedSessionId="@ChatSessionsListVm.SelectedTopicId" SessionTopics="@ChatSessionsListVm.GetTopicsOnMonth(DateTime.Today, true).OrderByDescending(v => v.Created).ToArray()"/>
}

@foreach (var group in ChatSessionsListVm.GroupTopicsByYearMonth(new (int year, int month)[] { (ReferenceDate.Year, ReferenceDate.Month) }))
{
    if (group.Item3.Any())
    {
        var groupName = $"{group.year} {CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(group.month)}";
        <ChatSessionsGroup GroupName="@groupName" SelectedSessionId="@ChatSessionsListVm.SelectedTopicId" SessionTopics="@group.Item3.OrderByDescending(v => v.Created).ToArray()"/>
    }
}


@code {

    [Parameter]
    public ChatSessionsListVm ChatSessionsListVm { get; set; } = new();

    [Parameter]
    public DateTime ReferenceDate { get; set; } = DateTime.Today;


    private void NavigateToNewChat(MouseEventArgs e)
    {
        var sessionId = Guid.NewGuid();
        NavigationManager.NavigateTo($"/Chat/{sessionId}");
    }

    private string GetChatSessionLink(Guid? sessionId)
    {
        if (sessionId == null)
            return $"chat/{Guid.NewGuid()}";

        return $"chat/{sessionId}";
    }

    private object GetSessionDescription(TopicQueryResult sessionTopic)
    {
        return $"{sessionTopic.Topic}";
    }

    private TopicQueryResult[] GetSessionTopicsFromThisWeek(TopicQueryResult[] sessionTopics)
    {
        var thisWeek = DateTime.Now.AddDays(-7);
        return sessionTopics.Where(t => t.Created > thisWeek).ToArray();
    }




}